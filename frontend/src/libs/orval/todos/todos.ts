/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Todo App API
 * Todo管理アプリケーションのAPI
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from "zod";

/**
 * ログインユーザーのTodo一覧を取得する
 * @summary Todo一覧取得
 */
export const getTodosQueryLimitDefault = 20;
export const getTodosQueryLimitMax = 100;
export const getTodosQueryOffsetDefault = 0;
export const getTodosQueryOffsetMin = 0;

export const getTodosQueryParams = zod.object({
  completed: zod
    .boolean()
    .optional()
    .describe(
      "完了済みタスクのみ取得する場合はtrue、未完了のみはfalse。指定なしは全て。",
    ),
  limit: zod
    .number()
    .min(1)
    .max(getTodosQueryLimitMax)
    .default(getTodosQueryLimitDefault),
  offset: zod.number().min(getTodosQueryOffsetMin).optional(),
});

export const getTodosResponseItemsItemCompletedDefault = false;

export const getTodosResponse = zod.object({
  items: zod.array(
    zod.object({
      id: zod.string().uuid(),
      userId: zod.string().uuid(),
      title: zod.string(),
      description: zod.string().optional(),
      completed: zod.boolean(),
      dueDate: zod.string().datetime({}).optional(),
      createdAt: zod.string().datetime({}),
      updatedAt: zod.string().datetime({}),
    }),
  ),
  total: zod.number(),
  offset: zod.number(),
  limit: zod.number(),
});

/**
 * 新しいTodoを作成する
 * @summary Todo作成
 */
export const createTodoBody = zod.object({
  title: zod.string(),
  description: zod.string().optional(),
  dueDate: zod.string().datetime({}).optional(),
});

/**
 * 指定されたTodoの詳細を取得する
 * @summary Todo詳細取得
 */
export const getTodoParams = zod.object({
  todoId: zod.string().uuid(),
});

export const getTodoResponseCompletedDefault = false;

export const getTodoResponse = zod.object({
  id: zod.string().uuid(),
  userId: zod.string().uuid(),
  title: zod.string(),
  description: zod.string().optional(),
  completed: zod.boolean(),
  dueDate: zod.string().datetime({}).optional(),
  createdAt: zod.string().datetime({}),
  updatedAt: zod.string().datetime({}),
});

/**
 * 指定されたTodoを更新する
 * @summary Todo更新
 */
export const updateTodoParams = zod.object({
  todoId: zod.string().uuid(),
});

export const updateTodoBody = zod.object({
  title: zod.string().optional(),
  description: zod.string().optional(),
  completed: zod.boolean().optional(),
  dueDate: zod.string().datetime({}).optional(),
});

export const updateTodoResponseCompletedDefault = false;

export const updateTodoResponse = zod.object({
  id: zod.string().uuid(),
  userId: zod.string().uuid(),
  title: zod.string(),
  description: zod.string().optional(),
  completed: zod.boolean(),
  dueDate: zod.string().datetime({}).optional(),
  createdAt: zod.string().datetime({}),
  updatedAt: zod.string().datetime({}),
});

/**
 * 指定されたTodoを削除する
 * @summary Todo削除
 */
export const deleteTodoParams = zod.object({
  todoId: zod.string().uuid(),
});
